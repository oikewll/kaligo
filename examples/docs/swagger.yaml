basePath: /api
definitions:
  model.Field:
    properties:
      field:
        type: string
      label:
        type: string
      rules:
        type: string
      type:
        type: string
    type: object
  model.Form:
    properties:
      csrf:
        type: string
      fields:
        items:
          $ref: '#/definitions/model.Field'
        type: array
      method:
        type: string
      name:
        type: string
      path:
        type: string
    type: object
  model.Purview:
    description: 用户权限
    type: object
  model.Todo:
    properties:
      date:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
  model.User:
    description: User account information
    properties:
      avatar:
        description: 用户头像地址
        type: string
      createdAt:
        description: 创建时间
        type: string
      creatorId:
        description: 创建用户 ID
        type: integer
      deletedAt:
        description: 删除时间
        type: string
      deletorId:
        description: 删除用户 ID
        type: integer
      email:
        description: 邮箱地址
        type: string
      groups:
        description: 用户所属权限组
        items:
          type: integer
        type: array
      id:
        description: 自增 ID
        type: integer
      isFirstLogin:
        description: 是否首次登录
        type: boolean
      password:
        description: 密码
        type: string
      purviews:
        items:
          $ref: '#/definitions/model.Purview'
        type: array
      realname:
        description: 用户昵称
        type: string
      sessionExpire:
        description: 登录 Session 过期时间
        type: string
      sessionID:
        description: 登录 Session ID
        type: string
      status:
        description: 状态
        type: integer
      uid:
        description: 用户 ID
        type: string
      updatedAt:
        description: 更新时间
        type: string
      updatorId:
        description: 更新用户 ID
        type: integer
      username:
        description: 用户名
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  title: Kaligo Example API
  version: "1.0"
paths:
  /auth/check_token:
    post:
      parameters:
      - description: CSRF Token
        in: formData
        name: csrf
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: CheckToken 检查 CSRF Token 是否存在
      tags:
      - Auth
  /auth/login:
    post:
      parameters:
      - default: test
        description: 账号
        in: formData
        name: username
        required: true
        type: string
      - default: test
        description: 密码
        in: formData
        name: password
        required: true
        type: string
      - default: true
        description: 记住密码
        in: formData
        name: remember
        required: true
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login 账户登陆
      tags:
      - Auth
  /auth/logout:
    delete:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout 账户退出
      tags:
      - Auth
  /auth/token:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Token 产生一个 CSRF Token
      tags:
      - Auth
  /init:
    get:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 初始化接口
      tags:
      - Home
  /sessions:
    delete:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Session 删除
      tags:
      - Session
    get:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Session 信息
      tags:
      - Session
    post:
      description: Session 添加简介
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Session 添加
      tags:
      - Session
  /sessions/destory:
    delete:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Session 销毁
      tags:
      - Session
  /todo:
    delete:
      parameters:
      - description: Todo ID
        in: query
        name: id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Delete 删除单条或多条数据
      tags:
      - todo
    get:
      parameters:
      - description: 当前页数, 1开始
        in: query
        name: page
        type: integer
      - description: 当前页数, 默认20
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Todo'
            type: array
      summary: List 获取所有 Todo
      tags:
      - todo
    post:
      parameters:
      - in: formData
        name: date
        type: string
      - in: formData
        name: done
        type: boolean
      - in: formData
        name: id
        type: integer
      - in: formData
        name: title
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Todo'
      summary: Create 添加一条数据
      tags:
      - todo
    put:
      parameters:
      - in: formData
        name: date
        type: string
      - in: formData
        name: done
        type: boolean
      - in: formData
        name: id
        type: integer
      - in: formData
        name: title
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Todo'
            type: array
      summary: Update 更新单条或多条数据
      tags:
      - todo
  /todo/{id}:
    get:
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Todo'
      summary: Detail 获取单条数据详情
      tags:
      - todo
  /user:
    get:
      parameters:
      - default: 1
        description: 当前页数
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页记录
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: List 分页获取用户信息
      tags:
      - User
    post:
      parameters:
      - default: test
        description: 账号
        in: formData
        name: username
        required: true
        type: string
      - default: test
        description: 密码
        in: formData
        name: password
        required: true
        type: string
      - default: test
        description: 姓名
        in: formData
        name: realname
        required: true
        type: string
      - description: 所属组IDs
        enum:
        - "1"
        - "2"
        - "3"
        in: formData
        name: groups
        required: true
        type: string
      - default: test@gmail.com
        description: 邮箱
        in: formData
        name: emali
        type: string
      - default: 1
        description: 状态
        in: formData
        name: status
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Create 添加一条数据
      tags:
      - User
  /user/{id}:
    get:
      parameters:
      - default: 1
        description: 账号ID
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Detail 用户信息
      tags:
      - User
    put:
      parameters:
      - default: 1
        description: 账号ID
        in: path
        name: id
        type: integer
      - default: test
        description: 账号
        in: formData
        name: username
        required: true
        type: string
      - default: test
        description: 密码
        in: formData
        name: password
        required: true
        type: string
      - default: test
        description: 姓名
        in: formData
        name: realname
        required: true
        type: string
      - description: 所属组IDs
        enum:
        - "1"
        - "2"
        - "3"
        in: formData
        name: groups
        required: true
        type: string
      - default: test@gmail.com
        description: 邮箱
        in: formData
        name: emali
        type: string
      - default: 1
        description: 状态
        in: formData
        name: status
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Update 更新单条或多条数据
      tags:
      - User
  /user/createform:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Form'
      summary: CreateForm 用户添加表单
      tags:
      - User
  /user{id}:
    delete:
      parameters:
      - default: 1
        description: 账号ID
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Delete 删除单条或多条数据
      tags:
      - User
swagger: "2.0"
